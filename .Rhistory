library(tidyverse)
install.packages(tidyverse)
install.packages("tidyverse")
library(tidyverse)
biketown <- read.csv("data/biketown-2018-trips.csv")
str(biketown)
summary(biketown)
library(lubridate)
# creating a new column
biketown$hour <-
hms(biketown$StartTime) %>% #reads as 'then'
hour()
table(biketown$hour)
freq_by_hour <- table(biketown$hour)
barplot(freq_by_hour)
?hist
hist(biketown$hour)
hist(biketown$hour, breaks=seq(0,23,3))
hist(biketown$hour, breaks=seq(0,24,3))
hist(biketown$hour, breaks=seq(0,24,2))
hist(biketown$hour, breaks=seq(0,24,12))
hist(biketown$hour, breaks=seq(0,24,3))
#focus on AM peak
am_peak <- subset(biketown, hour >= 7 & hour <10)
barplot(am_peak)
hist(am_peak)
hist(am_peak$hour)
barplot(am_peak$hour)
hist(am_peak$hour, breaks=seq(7,10,1))
barplot(table(am_peak$hour))
freq_by_month <- table(biketown$month)
barplot(freq_by_month)
biketown$month <-
mdy(biketown$StartDate) %>%
month(label=T, abbr=T)
str(biketown$month)
barplot(freq_by_month)
barplot(freq_by_month)
freq_by_month <- table(biketown$month)
barplot(freq_by_month)
#looking into station info
freq_by_station <- table(biketown$StartHub)
table(freq_by_station)
barplot(freq_by_station)
#getting top 25 stations
s <- sort(freq_by_station)
#getting top 25 stations
s <- sort(freq_by_station, decreasing = T)
#getting top 25 stations
s <- sort(freq_by_station, decreasing = T)[1:25]
barplot(freq_by_station)
barplot(s)
#getting top 25 stations
#sorts the table then wants 1-25
Top25 <- sort(freq_by_station, decreasing = T)[1:25]
barplot(Top25)
dotchart(Top25)
# load gapminder dataset
gapminder <-  read.csv("data/gapminder_data.csv",
stringsAsFactors = F)
# intro to dplyr
library(dplyr)
# load gapminder dataset
gapminder <-  read.csv("data/gapminder_data.csv",
stringsAsFactors = F)
#gapminder$continent <- as.factor(gapminder$continent)
#gapminder$continent <- as.character(gapminder$continent)
# get mean of gpd of Africa using Base R
mean(gapminder[gapminder$continent == "Africa", "gdpPercap"])
# easier to do this in dplyr
# remember to use the pipe %>%
# functions we will learn today from dplyr:
# select(), filter(), group_by(), summarize(), mutate()
# what attributes are in gapminder:
str(gapminder)
colnames(gapminder)
# want to subset on three attributes
subset_1 <- gapminder %>%
select(country, continent, lifeExp) # using the %>% shortcuts having to put gapminder[gapminder$country]
str(subset_1)
head(subset_1)
# to exclude certain attributes
subset_2 <- gapminder %>%
select(-lifeExp,-pop)
# select some attributes by rename a few for clarity
subset_3 <- gapminder %>%
select(country, population = pop, lifeExp,
gdp = gdpPercap)
str(subset_3)
head(subset_3)
# using filter
africa <- gapminder %>%
filter(continent == "Africa") %>%
select(country, population = pop, lifeExp)
table(africa$country) #lists all the countries because of order of operations
#need to get rid of the other countries because they
# will show when graphing
# issue is with when you called in the data it's a factor
# need to bring in the values as a character, not a factor
#gapminder <-  read.csv("gapminder_data.csv", stringsAsFactors = F)
# selet year, population, country for Europe
europe <- gapminder %>%
filter(continent == "Europe") %>%
select(year, population = pop, country)
# assign table as object and view to look better
europe_table <- table(europe$country)
View(europe_table) #capital V
#working through the dplyr cheat sheet
tbl_df(europe)
glimpse(europe)
View(europe)
#working through the dplyr cheat sheet
tbl_df(europe_table)
# assign table as object and view to look better
europe_table <- table(europe$country)
View(europe_table) #capital V
#working through the dplyr cheat sheet
tbl_df(europe_table)
glimpse(europe_table)
View(europe_table)
# working with group_by() and summarize ()
str(gapminder %>%  group_by(continent))
list or as
# separate mini data frames within your data frame
# it subsets it without making different objects
# summarize mean gdp per continent
gdp_continent <- gapminder %>%
group_by(continent) %>%
summarize(mean_gdp = mean(gdpPercap)) # summarize creates a new object and for each
# summarize mean gdp per continent
gdp_continent <- gapminder %>%
group_by(continent) %>%
summarize(mean_gdp = mean(gdpPercap)) # summarize creates a new object and for each
# summarize mean gdp per continent
gdp_continent <- gapminder %>%
group_by(continent) %>%
summarize(mean_gdp = mean(gdpPercap)) # summarize creates a new object and for each
# summarize mean gdp per continent
gdp_continent <- gapminder %>%
group_by(continent) %>%
summarize(mean_gdp = mean(gdpPercap)) # summarize creates a new object and for each
#continent have a column with the mean gdp per cap
View(gdp_continent)
barplot(gdp_continent)
library(ggplot2)
# summarize mean gdp per continent
gdp_continent <- gapminder %>%
group_by(continent) %>%
summarize(mean_gdp = mean(gdpPercap),
mean_lifeExp = = mean(lifeExp))
# summarize mean gdp per continent
gdp_continent <- gapminder %>%
group_by(continent) %>%
summarize(mean_gdp = mean(gdpPercap),
mean_lifeExp = mean(lifeExp))
summary_plot <- gdp_continent %>%
ggplots(aes(x = mean_gdp, y=mean_lifeExp))+
geom_point(stat = "identity") +
theme_bw()
summary_plot <- gdp_continent %>%
ggplots(aes(x = mean_gdp, y=mean_lifeExp))+
geom_point(stat = "identity") +
theme_bw()
summary_plot <- gdp_continent %>%
ggplot(aes(x = mean_gdp, y=mean_lifeExp))+
geom_point(stat = "identity") +
theme_bw()
summary_plot
# exercise - calc mean pop for all continents
pop_continent <- gapminder %>%
group_by(continent) %>%
summarize(mean_pop = mean(pop))
View(pop_continent)
source('~/Desktop/R Training/plotting/code/intro-dplyr.R', echo=TRUE)
plot_plot <- pop_cont_curr %>%
ggplot(pop_cont_curr, aes(continent))
# count() and n()
# count is like frequency
gapminder %>%
filter(year == 2002) %>%
count(continent, sort = T)
source('~/Desktop/R Training/plotting/code/intro-dplyr.R', echo=TRUE)
# mutate() is my friend
# when you're going to create a brand new column to add to the dataframe
xy <- data.frame(x= rnorm(100),
y= rnorm(100))
head(xy)
xyz <-  xy %>%
mutate(z=x*y)
head(xyz)
# add col that gives full gdp for the country and summarize by continent
gdp_per_country <- gapminder %>%
mutate(country_gdp=gdpPercap*pop)
View(gdp_per_country)
# add col that gives full gdp for the country and summarize by continent
gdp_per_country <- gapminder %>%
mutate(country_gdp=gdpPercap*pop) %>%
group_by(continent) %>%
summarize(total_gdp = sum(country_gdp))
# add col that gives full gdp for the country and summarize by continent
gdp_per_cont <- gapminder %>%
mutate(country_gdp=gdpPercap*pop) %>%
group_by(continent) %>%
summarize(total_gdp = sum(country_gdp))
View(gdp_per_cont)
library(tidyverse)
bike_network <- read.csv("bikenet-change.csv")
bike_network <- read.csv("data/bikenet-change.csv")
str(bike_network)
bike_network <- read.csv("data/bikenet-change.csv",
stringsAsFactors = F))
bike_network <- read.csv("data/bikenet-change.csv",
stringsAsFactors = F)
str(bike_network)
#stringsAsFactors = F)
str(bike_network)
bike_network <- read.csv("data/bikenet-change.csv",
stringsAsFactors = F)
str(bike_network)
library(dplyr)
library(tidyr)
library(ggplot2)
library(readr)
bikenet <- read_csv("data/bikenet-change.csv")
head(bikenet)
summary(bikenet)
summary(factor(bikenet$facility2013))
# need to tidy the table to see that change in facilities over time
# need to covert to a long table
#gather facility columns into single year variable
colnames(bikenet)
bikenet_tall <- bikenet %>%
gather(key = "year", value = "facility", #key is what the new column is called
facility2008:facility2013, #this works because the columns are contiguous
na.rm= T) #removes NA values
View(bikenet_tall)
bikenet_tall <- bikenet %>%
gather(key = "year", value = "facility", #key is what the new column is called
facility2008:facility2013, #this works because the columns are contiguous
na.rm= T) %>% #removes NA values
mutate(year = stringr::str_sub(year, start = -4)) #gets last 4 of string
# collapse/unit the street and suffix
bikenet_tall <- bikenet_tall %>%
unite(col = "street", c("fname", "ftype"), sep = " ")
source('~/Desktop/R Training/plotting/tidyverse.R', echo=TRUE)
bikenet_tall %>% filter(bikeid == 139730)
fac_lengths <- bikenet_tall %>%
filter(facility %in% c("BKE-LANE","BKE-BLVD","BKE-BUFF",
"BKE-TRAK","PTH-REMU")) %>% #filters types i want
group_by(year, facility) %>%
summarize(meters = sum(length_m)) %>%
mutate(miles = meters/1609)
View(fac_lengths)
library(dplyr)
library(tidyr)
library(ggplot2)
library(readr)
# ggplot start with data, get coordinate plane, and how to represent
p <- ggplot(fac_lengths, aes(year, miles, group=facility)) #x=year y=miles
view(p)
# separates representation from the template
p + geom_line()
p+ geom_point
p+ geom_point()
# ggplot start with data, get coordinate plane, and how to represent
p <- ggplot(fac_lengths, aes(year, miles,
group=facility
color=facility)) #x=year y=miles
# ggplot start with data, get coordinate plane, and how to represent
p <- ggplot(fac_lengths, aes(year, miles,  #x=year y=miles
group=facility,
color=facility))
# separates representation from the template, need to use geom
p + geom_line()
p+ geom_point()
p + geom_line() + scale_y_log10()
p + geom_line() + labs(title = "Change in Facilities")
p + geom_line() + labs(title = "Change in Facilities"
subtitle = "2008 - 2013")
p + geom_line() + labs(title = "Change in Facilities",
subtitle = "2008 - 2013")
p + geom_line() + labs(title = "Change in Facilities",
subtitle = "2008 - 2013") +
xlab("year") + ylab("Total miles")
p + geom_line() + labs(title = "Change in Facilities",
subtitle = "2008 - 2013",
caption = "suorce: Portland Metro") +
xlab("year") + ylab("Total miles")
p2 <- ggplot(fac_lengths, aes(x=year, y=miles,
group=facility))
p2 +geom_line(size = 1, color = "blue")
p2 +geom_line(size = 1, color = "blue") + facet_wrap( ~ facility)
p2 +geom_line(size = 1, color = "blue") + facet_wrap( ~ facility) + scale_y_log10()
library(dplyr)
library(tidyr)
library(ggplot2)
library(readr)
install.packages("fivethirtyeight")
library(fivethirtyeight)
bechdel <- read_csv("bechdel")
?bechdel
d <- bechdel
View(d)
str(d)
library(dplyr)
library(tidyr)
library(ggplot2)
library(readr)
purchases <- read_csv("data/Purchses.csv")
purchases <- read_csv("data/Purchases.csv")
head(purchases)
View(purchases)
summary(puchases)
pur <- read_csv("data/Purchases.csv")
head(pur)
summary(pur)
colnames(pur)
library(lubridate)
TOD <- pur$`Purchase Date Local`
?hms
?lubridate
d <- pur %>%
mutate(purchase_l = ymd_hms(`Purchase Date Local`))
d <- pur %>%
mutate(purchase_l = ymd_hms(`Purchase Date Local`)) %>%
group_by(hour(purchase_l)) %>%
summarize(count(n()))
d <- pur %>%
mutate(purchase_l = ymd_hms(`Purchase Date Local`)) %>%
group_by(hour()) %>%
summarize(count(n()))
d <- pur %>%
mutate(purchase_l = ymd_hms(`Purchase Date Local`)) %>%
group_by(hour()) #%>%
d <- pur %>%
mutate(purchase_l = ymd_hms(`Purchase Date Local`)) %>%
group_by(hour(purchase_l)) #%>%
source('~/Desktop/R Training/plotting/code/purchases.R', echo=TRUE)
d <- pur %>%
mutate(purchase_l = ymd_hms(`Purchase Date Local`)) %>%
group_by(hour = hour(purchase_l)) %>%
summarize(count(hour))
d <- pur %>%
mutate(purchase_l = ymd_hms(`Purchase Date Local`)) %>%
group_by(hour = hour(purchase_l)) %>%
summarize(sum(Amount))
barplot(d$hour, d$`sum(Amount)`)
d <- pur %>%
mutate(purchase_l = ymd_hms(`Purchase Date Local`)) %>%
group_by(hour = hour(purchase_l)) %>%
summarize(amount = sum(Amount))
g <- ggplot(d, aes(hour, amount))
g + geom_bar
g + geom_bar()
g + geom_bar(stat = "identity")
# total purchase amounts by TOD
TOD_amount <- pur %>%
mutate(purchase_l = ymd_hms(`Purchase Date Local`)) %>%
group_by(hour = hour(purchase_l)) %>%
summarize(amount = sum(Amount))
g <- ggplot(TOD_amount, aes(hour, amount))
g + geom_bar(stat = "identity")
+scale_fill_gradient(low="green", high = "red")
g + geom_bar(stat = "identity")  +scale_fill_gradient(low="green", high = "red")
g + geom_bar(stat = "identity") + scale_fill_gradient(low="green", high = "red")
g + geom_bar(stat = "identity") +
scale_fill_gradient(low="green", high = "red")
g + geom_bar(aes(fill=fl))
View(TOD_amount)
